// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: kgmessage.proto

package messages

import (
	tss "github.com/bnb-chain/tss-lib/tss"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op   string `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{0}
}

func (x *Operation) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *Operation) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N []byte `protobuf:"bytes,1,opt,name=N,proto3" json:"N,omitempty"`
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{1}
}

func (x *PublicKey) GetN() []byte {
	if x != nil {
		return x.N
	}
	return nil
}

type PrivateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey *PublicKey `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	LambdaN   []byte     `protobuf:"bytes,2,opt,name=LambdaN,proto3" json:"LambdaN,omitempty"`
	PhiN      []byte     `protobuf:"bytes,3,opt,name=PhiN,proto3" json:"PhiN,omitempty"`
}

func (x *PrivateKey) Reset() {
	*x = PrivateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateKey) ProtoMessage() {}

func (x *PrivateKey) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateKey.ProtoReflect.Descriptor instead.
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{2}
}

func (x *PrivateKey) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PrivateKey) GetLambdaN() []byte {
	if x != nil {
		return x.LambdaN
	}
	return nil
}

func (x *PrivateKey) GetPhiN() []byte {
	if x != nil {
		return x.PhiN
	}
	return nil
}

type LocalPreParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaillierSK *PrivateKey     `protobuf:"bytes,1,opt,name=PaillierSK,proto3" json:"PaillierSK,omitempty"` // ski
	NTildei    []byte          `protobuf:"bytes,2,opt,name=NTildei,proto3" json:"NTildei,omitempty"`
	H1I        []byte          `protobuf:"bytes,3,opt,name=H1i,proto3" json:"H1i,omitempty"`
	H2I        []byte          `protobuf:"bytes,4,opt,name=H2i,proto3" json:"H2i,omitempty"`
	Alpha      []byte          `protobuf:"bytes,5,opt,name=Alpha,proto3" json:"Alpha,omitempty"`
	Beta       []byte          `protobuf:"bytes,6,opt,name=Beta,proto3" json:"Beta,omitempty"`
	P          []byte          `protobuf:"bytes,7,opt,name=P,proto3" json:"P,omitempty"`
	Q          []byte          `protobuf:"bytes,8,opt,name=Q,proto3" json:"Q,omitempty"`
	PartyIds   []*ProtoPartyID `protobuf:"bytes,9,rep,name=partyIds,proto3" json:"partyIds,omitempty"`
	Index      int32           `protobuf:"varint,10,opt,name=Index,proto3" json:"Index,omitempty"`
	Gid        string          `protobuf:"bytes,11,opt,name=Gid,proto3" json:"Gid,omitempty"`
	Dlnproof1  *DLNProof       `protobuf:"bytes,12,opt,name=Dlnproof1,proto3" json:"Dlnproof1,omitempty"`
	Dlnproof2  *DLNProof       `protobuf:"bytes,13,opt,name=Dlnproof2,proto3" json:"Dlnproof2,omitempty"`
	PartyCount int32           `protobuf:"varint,14,opt,name=PartyCount,proto3" json:"PartyCount,omitempty"`
	Threshold  int32           `protobuf:"varint,15,opt,name=Threshold,proto3" json:"Threshold,omitempty"`
}

func (x *LocalPreParams) Reset() {
	*x = LocalPreParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalPreParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalPreParams) ProtoMessage() {}

func (x *LocalPreParams) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalPreParams.ProtoReflect.Descriptor instead.
func (*LocalPreParams) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{3}
}

func (x *LocalPreParams) GetPaillierSK() *PrivateKey {
	if x != nil {
		return x.PaillierSK
	}
	return nil
}

func (x *LocalPreParams) GetNTildei() []byte {
	if x != nil {
		return x.NTildei
	}
	return nil
}

func (x *LocalPreParams) GetH1I() []byte {
	if x != nil {
		return x.H1I
	}
	return nil
}

func (x *LocalPreParams) GetH2I() []byte {
	if x != nil {
		return x.H2I
	}
	return nil
}

func (x *LocalPreParams) GetAlpha() []byte {
	if x != nil {
		return x.Alpha
	}
	return nil
}

func (x *LocalPreParams) GetBeta() []byte {
	if x != nil {
		return x.Beta
	}
	return nil
}

func (x *LocalPreParams) GetP() []byte {
	if x != nil {
		return x.P
	}
	return nil
}

func (x *LocalPreParams) GetQ() []byte {
	if x != nil {
		return x.Q
	}
	return nil
}

func (x *LocalPreParams) GetPartyIds() []*ProtoPartyID {
	if x != nil {
		return x.PartyIds
	}
	return nil
}

func (x *LocalPreParams) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *LocalPreParams) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *LocalPreParams) GetDlnproof1() *DLNProof {
	if x != nil {
		return x.Dlnproof1
	}
	return nil
}

func (x *LocalPreParams) GetDlnproof2() *DLNProof {
	if x != nil {
		return x.Dlnproof2
	}
	return nil
}

func (x *LocalPreParams) GetPartyCount() int32 {
	if x != nil {
		return x.PartyCount
	}
	return 0
}

func (x *LocalPreParams) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

type ProtoPartyID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Moniker string `protobuf:"bytes,2,opt,name=moniker,proto3" json:"moniker,omitempty"`
	Key     []byte `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Index   int32  `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ProtoPartyID) Reset() {
	*x = ProtoPartyID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPartyID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPartyID) ProtoMessage() {}

func (x *ProtoPartyID) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPartyID.ProtoReflect.Descriptor instead.
func (*ProtoPartyID) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoPartyID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProtoPartyID) GetMoniker() string {
	if x != nil {
		return x.Moniker
	}
	return ""
}

func (x *ProtoPartyID) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ProtoPartyID) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ProtoMpcMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To          []*ProtoPartyID     `protobuf:"bytes,1,rep,name=To,proto3" json:"To,omitempty"`
	From        *ProtoPartyID       `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	Gid         string              `protobuf:"bytes,4,opt,name=Gid,proto3" json:"Gid,omitempty"`
	Type        string              `protobuf:"bytes,5,opt,name=Type,proto3" json:"Type,omitempty"`
	IsBroadcast bool                `protobuf:"varint,6,opt,name=IsBroadcast,proto3" json:"IsBroadcast,omitempty"`
	MsgWrapper  *tss.MessageWrapper `protobuf:"bytes,7,opt,name=MsgWrapper,proto3" json:"MsgWrapper,omitempty"`
	Content     []byte              `protobuf:"bytes,8,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *ProtoMpcMessage) Reset() {
	*x = ProtoMpcMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoMpcMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMpcMessage) ProtoMessage() {}

func (x *ProtoMpcMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMpcMessage.ProtoReflect.Descriptor instead.
func (*ProtoMpcMessage) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoMpcMessage) GetTo() []*ProtoPartyID {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ProtoMpcMessage) GetFrom() *ProtoPartyID {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ProtoMpcMessage) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ProtoMpcMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoMpcMessage) GetIsBroadcast() bool {
	if x != nil {
		return x.IsBroadcast
	}
	return false
}

func (x *ProtoMpcMessage) GetMsgWrapper() *tss.MessageWrapper {
	if x != nil {
		return x.MsgWrapper
	}
	return nil
}

func (x *ProtoMpcMessage) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type OperationStartDKG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op        string          `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
	PreParams *LocalPreParams `protobuf:"bytes,2,opt,name=PreParams,proto3" json:"PreParams,omitempty"`
}

func (x *OperationStartDKG) Reset() {
	*x = OperationStartDKG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationStartDKG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationStartDKG) ProtoMessage() {}

func (x *OperationStartDKG) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationStartDKG.ProtoReflect.Descriptor instead.
func (*OperationStartDKG) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{6}
}

func (x *OperationStartDKG) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *OperationStartDKG) GetPreParams() *LocalPreParams {
	if x != nil {
		return x.PreParams
	}
	return nil
}

type UnSignedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    []byte      `protobuf:"bytes,1,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Index  int32       `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
	Gid    string      `protobuf:"bytes,3,opt,name=Gid,proto3" json:"Gid,omitempty"`
	Config *SignConfig `protobuf:"bytes,4,opt,name=Config,proto3" json:"Config,omitempty"`
}

func (x *UnSignedMessage) Reset() {
	*x = UnSignedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnSignedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSignedMessage) ProtoMessage() {}

func (x *UnSignedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSignedMessage.ProtoReflect.Descriptor instead.
func (*UnSignedMessage) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{7}
}

func (x *UnSignedMessage) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *UnSignedMessage) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *UnSignedMessage) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *UnSignedMessage) GetConfig() *SignConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ResharingMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid      string           `protobuf:"bytes,1,opt,name=Gid,proto3" json:"Gid,omitempty"`
	OldParty *ResharingData   `protobuf:"bytes,2,opt,name=OldParty,proto3" json:"OldParty,omitempty"`
	NewParty *ResharingData   `protobuf:"bytes,3,opt,name=NewParty,proto3" json:"NewParty,omitempty"`
	Config   *ResharingConfig `protobuf:"bytes,4,opt,name=Config,proto3" json:"Config,omitempty"`
}

func (x *ResharingMessage) Reset() {
	*x = ResharingMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResharingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResharingMessage) ProtoMessage() {}

func (x *ResharingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResharingMessage.ProtoReflect.Descriptor instead.
func (*ResharingMessage) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{8}
}

func (x *ResharingMessage) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ResharingMessage) GetOldParty() *ResharingData {
	if x != nil {
		return x.OldParty
	}
	return nil
}

func (x *ResharingMessage) GetNewParty() *ResharingData {
	if x != nil {
		return x.NewParty
	}
	return nil
}

func (x *ResharingMessage) GetConfig() *ResharingConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ResharingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     int32           `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	PreParams *LocalPreParams `protobuf:"bytes,2,opt,name=PreParams,proto3" json:"PreParams,omitempty"`
}

func (x *ResharingData) Reset() {
	*x = ResharingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResharingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResharingData) ProtoMessage() {}

func (x *ResharingData) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResharingData.ProtoReflect.Descriptor instead.
func (*ResharingData) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{9}
}

func (x *ResharingData) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ResharingData) GetPreParams() *LocalPreParams {
	if x != nil {
		return x.PreParams
	}
	return nil
}

type DLNProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alpha [][]byte `protobuf:"bytes,1,rep,name=Alpha,proto3" json:"Alpha,omitempty"`
	T     [][]byte `protobuf:"bytes,2,rep,name=T,proto3" json:"T,omitempty"`
}

func (x *DLNProof) Reset() {
	*x = DLNProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DLNProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLNProof) ProtoMessage() {}

func (x *DLNProof) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLNProof.ProtoReflect.Descriptor instead.
func (*DLNProof) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{10}
}

func (x *DLNProof) GetAlpha() [][]byte {
	if x != nil {
		return x.Alpha
	}
	return nil
}

func (x *DLNProof) GetT() [][]byte {
	if x != nil {
		return x.T
	}
	return nil
}

type DKGConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyCount int32 `protobuf:"varint,1,opt,name=PartyCount,proto3" json:"PartyCount,omitempty"`
	Threshold  int32 `protobuf:"varint,2,opt,name=Threshold,proto3" json:"Threshold,omitempty"`
}

func (x *DKGConfig) Reset() {
	*x = DKGConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DKGConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DKGConfig) ProtoMessage() {}

func (x *DKGConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DKGConfig.ProtoReflect.Descriptor instead.
func (*DKGConfig) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{11}
}

func (x *DKGConfig) GetPartyCount() int32 {
	if x != nil {
		return x.PartyCount
	}
	return 0
}

func (x *DKGConfig) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

type SignConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyCount     int32   `protobuf:"varint,1,opt,name=PartyCount,proto3" json:"PartyCount,omitempty"`
	Threshold      int32   `protobuf:"varint,2,opt,name=Threshold,proto3" json:"Threshold,omitempty"`
	SignPartyIndex []int32 `protobuf:"varint,3,rep,packed,name=SignPartyIndex,proto3" json:"SignPartyIndex,omitempty"`
}

func (x *SignConfig) Reset() {
	*x = SignConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignConfig) ProtoMessage() {}

func (x *SignConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignConfig.ProtoReflect.Descriptor instead.
func (*SignConfig) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{12}
}

func (x *SignConfig) GetPartyCount() int32 {
	if x != nil {
		return x.PartyCount
	}
	return 0
}

func (x *SignConfig) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *SignConfig) GetSignPartyIndex() []int32 {
	if x != nil {
		return x.SignPartyIndex
	}
	return nil
}

type ResharingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyCount    int32   `protobuf:"varint,1,opt,name=PartyCount,proto3" json:"PartyCount,omitempty"`
	Threshold     int32   `protobuf:"varint,2,opt,name=Threshold,proto3" json:"Threshold,omitempty"`
	NPartyCount   int32   `protobuf:"varint,3,opt,name=NPartyCount,proto3" json:"NPartyCount,omitempty"`
	NThreshold    int32   `protobuf:"varint,4,opt,name=NThreshold,proto3" json:"NThreshold,omitempty"`
	OldPartyIndex []int32 `protobuf:"varint,5,rep,packed,name=OldPartyIndex,proto3" json:"OldPartyIndex,omitempty"`
}

func (x *ResharingConfig) Reset() {
	*x = ResharingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kgmessage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResharingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResharingConfig) ProtoMessage() {}

func (x *ResharingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kgmessage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResharingConfig.ProtoReflect.Descriptor instead.
func (*ResharingConfig) Descriptor() ([]byte, []int) {
	return file_kgmessage_proto_rawDescGZIP(), []int{13}
}

func (x *ResharingConfig) GetPartyCount() int32 {
	if x != nil {
		return x.PartyCount
	}
	return 0
}

func (x *ResharingConfig) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *ResharingConfig) GetNPartyCount() int32 {
	if x != nil {
		return x.NPartyCount
	}
	return 0
}

func (x *ResharingConfig) GetNThreshold() int32 {
	if x != nil {
		return x.NThreshold
	}
	return 0
}

func (x *ResharingConfig) GetOldPartyIndex() []int32 {
	if x != nil {
		return x.OldPartyIndex
	}
	return nil
}

var File_kgmessage_proto protoreflect.FileDescriptor

var file_kgmessage_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6b, 0x67, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x17, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x19, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x4e,
	0x22, 0x6d, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x31,
	0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x4e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x4e, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x68, 0x69, 0x4e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x50, 0x68, 0x69, 0x4e, 0x22,
	0xc8, 0x03, 0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x50, 0x61, 0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x53, 0x4b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x50, 0x61,
	0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x53, 0x4b, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x54, 0x69, 0x6c,
	0x64, 0x65, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x4e, 0x54, 0x69, 0x6c, 0x64,
	0x65, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x48, 0x31, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x48, 0x31, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x48, 0x32, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x48, 0x32, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x42, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x42, 0x65, 0x74, 0x61,
	0x12, 0x0c, 0x0a, 0x01, 0x50, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x50, 0x12, 0x0c,
	0x0a, 0x01, 0x51, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x51, 0x12, 0x32, 0x0a, 0x08,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x44, 0x52, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x44, 0x6c, 0x6e, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x4c, 0x4e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52,
	0x09, 0x44, 0x6c, 0x6e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x31, 0x12, 0x30, 0x0a, 0x09, 0x44, 0x6c,
	0x6e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x32, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x4c, 0x4e, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x52, 0x09, 0x44, 0x6c, 0x6e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x32, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x60, 0x0a, 0x0c, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f,
	0x6e, 0x69, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x6e,
	0x69, 0x6b, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x87, 0x02, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x70, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x26, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x44, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x2a, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x44, 0x52, 0x04,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x47, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x49, 0x73, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0a,
	0x4d, 0x73, 0x67, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x74, 0x73, 0x73, 0x6c, 0x69,
	0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x52, 0x0a, 0x4d, 0x73, 0x67, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x5b, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x4b, 0x47, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x36, 0x0a, 0x09, 0x50,
	0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50,
	0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x09, 0x50, 0x72, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x79, 0x0a, 0x0f, 0x55, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10,
	0x0a, 0x03, 0x47, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x69, 0x64,
	0x12, 0x2c, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xc1,
	0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x47, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x08, 0x4e, 0x65,
	0x77, 0x50, 0x61, 0x72, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12,
	0x31, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x5d, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x36, 0x0a, 0x09, 0x50, 0x72, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x09, 0x50, 0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x2e, 0x0a, 0x08, 0x44, 0x4c, 0x4e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x41, 0x6c,
	0x70, 0x68, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x54, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x01,
	0x54, 0x22, 0x49, 0x0a, 0x09, 0x44, 0x4b, 0x47, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x72, 0x0a, 0x0a,
	0x53, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0xb7, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4e, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x4f, 0x6c, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kgmessage_proto_rawDescOnce sync.Once
	file_kgmessage_proto_rawDescData = file_kgmessage_proto_rawDesc
)

func file_kgmessage_proto_rawDescGZIP() []byte {
	file_kgmessage_proto_rawDescOnce.Do(func() {
		file_kgmessage_proto_rawDescData = protoimpl.X.CompressGZIP(file_kgmessage_proto_rawDescData)
	})
	return file_kgmessage_proto_rawDescData
}

var file_kgmessage_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_kgmessage_proto_goTypes = []interface{}{
	(*Operation)(nil),          // 0: messages.Operation
	(*PublicKey)(nil),          // 1: messages.PublicKey
	(*PrivateKey)(nil),         // 2: messages.PrivateKey
	(*LocalPreParams)(nil),     // 3: messages.LocalPreParams
	(*ProtoPartyID)(nil),       // 4: messages.ProtoPartyID
	(*ProtoMpcMessage)(nil),    // 5: messages.ProtoMpcMessage
	(*OperationStartDKG)(nil),  // 6: messages.OperationStartDKG
	(*UnSignedMessage)(nil),    // 7: messages.UnSignedMessage
	(*ResharingMessage)(nil),   // 8: messages.ResharingMessage
	(*ResharingData)(nil),      // 9: messages.ResharingData
	(*DLNProof)(nil),           // 10: messages.DLNProof
	(*DKGConfig)(nil),          // 11: messages.DKGConfig
	(*SignConfig)(nil),         // 12: messages.SignConfig
	(*ResharingConfig)(nil),    // 13: messages.ResharingConfig
	(*tss.MessageWrapper)(nil), // 14: binance.tsslib.MessageWrapper
}
var file_kgmessage_proto_depIdxs = []int32{
	1,  // 0: messages.PrivateKey.PublicKey:type_name -> messages.PublicKey
	2,  // 1: messages.LocalPreParams.PaillierSK:type_name -> messages.PrivateKey
	4,  // 2: messages.LocalPreParams.partyIds:type_name -> messages.ProtoPartyID
	10, // 3: messages.LocalPreParams.Dlnproof1:type_name -> messages.DLNProof
	10, // 4: messages.LocalPreParams.Dlnproof2:type_name -> messages.DLNProof
	4,  // 5: messages.ProtoMpcMessage.To:type_name -> messages.ProtoPartyID
	4,  // 6: messages.ProtoMpcMessage.From:type_name -> messages.ProtoPartyID
	14, // 7: messages.ProtoMpcMessage.MsgWrapper:type_name -> binance.tsslib.MessageWrapper
	3,  // 8: messages.OperationStartDKG.PreParams:type_name -> messages.LocalPreParams
	12, // 9: messages.UnSignedMessage.Config:type_name -> messages.SignConfig
	9,  // 10: messages.ResharingMessage.OldParty:type_name -> messages.ResharingData
	9,  // 11: messages.ResharingMessage.NewParty:type_name -> messages.ResharingData
	13, // 12: messages.ResharingMessage.Config:type_name -> messages.ResharingConfig
	3,  // 13: messages.ResharingData.PreParams:type_name -> messages.LocalPreParams
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_kgmessage_proto_init() }
func file_kgmessage_proto_init() {
	if File_kgmessage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kgmessage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalPreParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPartyID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoMpcMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationStartDKG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnSignedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResharingMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResharingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DLNProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DKGConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kgmessage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResharingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kgmessage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kgmessage_proto_goTypes,
		DependencyIndexes: file_kgmessage_proto_depIdxs,
		MessageInfos:      file_kgmessage_proto_msgTypes,
	}.Build()
	File_kgmessage_proto = out.File
	file_kgmessage_proto_rawDesc = nil
	file_kgmessage_proto_goTypes = nil
	file_kgmessage_proto_depIdxs = nil
}
